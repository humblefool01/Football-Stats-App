{"version":3,"sources":["Home.js","PointsTable.js","Loading.js","TeamDetails.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","state","index","console","log","row1","row2","entries","value","push","className","key","onClick","ButtonClicked","to","pathname","data","src","alt","id","this","setState","React","Component","PointsTable","teamClicked","uclQ","tableData","leagueTableData","standings","table","TableHeader","i","row","team","TeamButtonClicked","crestUrl","style","fontSize","name","playedGames","won","draw","lost","points","goalsFor","goalsAgainst","goalDifference","length","outerCard","groupName","group","j","groupTable","teamIndex","T","header","Loading","buttonID","url","bundesliga","ucl","epl","eredivise","laliga","ligue1","seriea","received","fetchData","fetch","method","headers","rawData","json","dataJSON","backgroungImg","location","TeamDetails","managerCard","goalkeepersCard","defendersCard","midfieldersCard","attackersCard","manager","goalkeepers","defenders","midfielders","attackers","squad","role","position","float","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.20ebe755.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nclass Home extends React.Component {    \r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            index: null,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        console.log(\"In Home render\");\r\n\r\n        const images = [\"/logos/laliga-logo.png\", \"logos/ucl-logo.png\", \"logos/bundesliga-logo.png\", \"logos/epl-logo.png\", \"logos/ligue1-logo.png\", \"logos/eredivise-logo.png\"]\r\n        const row1 = [], row2 = [];\r\n        for (const [index, value] of images.entries()) {            \r\n            if (index < 3) {                \r\n                row1.push(                                 \r\n                    <button className=\"column\" key={index} onClick={() => this.ButtonClicked(index)}>\r\n                        <Link to={{pathname: \"/result\", data: index}}>\r\n                            <img src={value} className=\"container\" alt=\"\"></img>\r\n                        </Link>\r\n                    </button>\r\n                );\r\n            }else {\r\n                row2.push(                \r\n                    <button className=\"column\" key={index} onClick={() => this.ButtonClicked(index)}>\r\n                        <Link to={{pathname: \"/result\", data: index}}>\r\n                            <img src={value} className=\"container\" alt=\"\"></img>\r\n                        </Link>\r\n                    </button>\r\n                );\r\n            }\r\n          }\r\n        return (\r\n                <div className=\"Home\">\r\n                    <nav>\r\n                        <h1>Football Stats</h1>            \r\n                    </nav>\r\n                    <div className=\"row\">\r\n                        {row1}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {row2}\r\n                    </div>\r\n                </div>        \r\n        );\r\n    }\r\n\r\n    ButtonClicked(id) {\r\n        this.setState({\r\n            index: id,            \r\n        }, () => {console.log(\"Index: \", this.state.index);});                \r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { concat } from 'rxjs';\r\n\r\nclass PointsTable extends React.Component{\r\n    constructor(props) {\r\n        super(props);        \r\n        this.state = {\r\n            teamClicked: false,\r\n        }\r\n    }\r\n    render() {\r\n        const id = this.props.id;\r\n        const tableData = this.props.data;\r\n        const leagueTableData = tableData.standings[0].table;\r\n        var uclQ;\r\n        var table = [];\r\n        var groupName = \"\";\r\n\r\n        switch (id) {\r\n            case 1:\r\n                uclQ = 2;                \r\n                break;\r\n            case 4:\r\n                uclQ = 2;\r\n                break;\r\n            case 5:      \r\n                uclQ = 0;          \r\n                break;\r\n            default:\r\n                uclQ = 4;\r\n                break;\r\n        }\r\n\r\n        if (id != 1) {\r\n            table.push(this.TableHeader());\r\n            for (let i=0; i<leagueTableData.length; i++) {\r\n                const row = [];  \r\n                if (i+1 <= uclQ) {\r\n                    row.push(<td><div className=\"TdUcl\">{i+1}</div></td>);    \r\n                }\r\n                else {\r\n                    row.push(<td>{i+1}</td>);    \r\n                }\r\n                row.push(<td><Link className=\"LinkTag\" to={{pathname: \"/TeamDetails\", data: leagueTableData[i].team.id}}>\r\n                    <button key={i+1} className=\"TeamClass\" onClick={() => {this.TeamButtonClicked(leagueTableData, i)}}>                            \r\n                            <img className=\"ImgLogo\" src={leagueTableData[i].team.crestUrl} alt=\"\"></img>\r\n                            <span style={{fontSize: \"120%\"}}>{leagueTableData[i].team.name}</span>\r\n                        </button>\r\n                        </Link>\r\n                    </td>);\r\n                row.push(<td>{leagueTableData[i].playedGames}</td>);\r\n                row.push(<td>{leagueTableData[i].won}</td>);\r\n                row.push(<td>{leagueTableData[i].draw}</td>);\r\n                row.push(<td>{leagueTableData[i].lost}</td>);\r\n                row.push(<td>{leagueTableData[i].points}</td>);\r\n                row.push(<td>{leagueTableData[i].goalsFor}</td>);\r\n                row.push(<td>{leagueTableData[i].goalsAgainst}</td>);\r\n                row.push(<td>{leagueTableData[i].goalDifference}</td>);\r\n\r\n                table.push(<tr>{row}</tr>)\r\n            }         \r\n            return(\r\n                <div>\r\n                    <table className=\"TableCard\">  \r\n                        <tbody>     \r\n                            {table}\r\n                        </tbody>\r\n                    </table>    \r\n                </div>        \r\n            )\r\n        } else {\r\n            const outerCard = [];\r\n            for (let i=0; i< tableData.standings.length; i+=3) {\r\n                this.groupName = tableData.standings[i].group;\r\n                table = [];\r\n                table.push(this.TableHeader());\r\n                for (let j=0; j<tableData.standings[i].table.length; j++) {\r\n                    const groupTable = tableData.standings[i].table;\r\n                    const row = [];\r\n                    if (j+1 <= uclQ) {\r\n                        row.push(<td><div className=\"TdUcl\">{j+1}</div></td>);\r\n                    }else {\r\n                        row.push(<td>{j+1}</td>);\r\n                    }\r\n                    row.push(<td>\r\n                        <Link className=\"LinkTag\" to={{pathname: \"/TeamDetails\", data: groupTable[j].team.id}}>\r\n                        <button className=\"TeamClass\" onClick={() => {this.TeamButtonClicked(groupTable, j)}}><img className=\"ImgLogo\" src={groupTable[j].team.crestUrl} alt=\"\"></img>\r\n                        <span style={{fontSize: \"120%\"}}>{groupTable[j].team.name}</span>\r\n                        </button>\r\n                        </Link>\r\n                        </td>);\r\n                    row.push(<td>{groupTable[j].playedGames}</td>);\r\n                    row.push(<td>{groupTable[j].won}</td>);\r\n                    row.push(<td>{groupTable[j].draw}</td>);\r\n                    row.push(<td>{groupTable[j].lost}</td>);\r\n                    row.push(<td>{groupTable[j].points}</td>);\r\n                    row.push(<td>{groupTable[j].goalsFor}</td>);\r\n                    row.push(<td>{groupTable[j].goalsAgainst}</td>);\r\n                    row.push(<td>{groupTable[j].goalDifference}</td>);\r\n\r\n                    table.push(<tr>{row}</tr>);\r\n                }\r\n                outerCard.push(<table className=\"TableCard\">  \r\n                            <div className=\"GroupName\"><b>{this.groupName}</b></div>\r\n                            <tbody>     \r\n                                {table}\r\n                            </tbody>\r\n                        </table>);\r\n            }\r\n            return (<div>{outerCard}</div>    \r\n            );\r\n        }\r\n    }\r\n\r\n    TeamButtonClicked(leagueTableData, teamIndex) {\r\n        console.log(leagueTableData[teamIndex].team.id, leagueTableData[teamIndex].team.name);\r\n        this.setState({\r\n            teamClicked: true,\r\n        })\r\n    }\r\n\r\n    TableHeader() {\r\n        const T = [];\r\n        const header = [];\r\n        header.push(<th>Pos</th>);\r\n        header.push(<th className=\"Th_Team_name\">Team</th>);\r\n        header.push(<th>Matches</th>);\r\n        header.push(<th>Won</th>);\r\n        header.push(<th>Draw</th>);\r\n        header.push(<th>Lost</th>);\r\n        header.push(<th>Pts</th>);\r\n        header.push(<th>GF</th>);\r\n        header.push(<th>GA</th>);\r\n        header.push(<th>GD</th>);\r\n        T.push(<tr>{header}</tr>);\r\n        return T;\r\n    }\r\n    \r\n}\r\n\r\nexport default PointsTable;\r\n","import React from 'react'; \r\nimport './App.css';\r\nimport PointsTable from './PointsTable';\r\n\r\nclass Loading extends React.Component {        \r\n\r\n    constructor(props) {        \r\n        super(props);\r\n        this.data = null;\r\n        this.buttonID = -1;           \r\n        this.url = \"\";\r\n        this.bundesliga = 'https://api.football-data.org/v2/competitions/2002/standings';\r\n        this.ucl = 'https://api.football-data.org/v2/competitions/2001/standings';\r\n        this.epl = 'https://api.football-data.org/v2/competitions/2021/standings';  \r\n        this.eredivise = 'https://api.football-data.org/v2/competitions/2003/standings';\r\n        this.laliga = 'https://api.football-data.org/v2/competitions/2014/standings';\r\n        this.ligue1 = 'https://api.football-data.org/v2/competitions/2015/standings';\r\n        this.seriea = 'https://api.football-data.org/v2/competitions/2034/standings';\r\n        this.name = \"\";\r\n        this.state = {\r\n            received: false,\r\n        }\r\n        /*\r\n        2000: WC\r\n        2001: UCL\r\n        2002: Bundesliga\r\n        2021: EPL\r\n        2003: Eredivise\r\n        2014: LaLiga\r\n        2015: Ligue 1\r\n        2034: SerieA\r\n        */\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        switch (this.buttonID) {\r\n            case 0:\r\n                this.url = this.laliga;\r\n                this.name=\"La Liga\";\r\n                break;\r\n            case 1:\r\n                    this.url = this.ucl;\r\n                    this.name = \"UEFA Champions League\";\r\n                break;\r\n            case 2:\r\n                    this.url = this.bundesliga;\r\n                    this.name = \"Bundesliga\";\r\n                break;\r\n            case 3:\r\n                    this.url = this.epl;\r\n                    this.name = \"Premier League\";\r\n                break;\r\n            case 4:\r\n                    this.url = this.ligue1;\r\n                    this.name = \"Ligue 1\";\r\n                break;\r\n            case 5:\r\n                    this.url = this.eredivise;\r\n                    this.name = \"Eredivise\";\r\n                break;\r\n            default:\r\n                console.log(\"Switch case default error!\");\r\n                break;\r\n        }\r\n\r\n        this.data = await this.fetchData();\r\n        if (this.data != null) {\r\n            this.setState({\r\n                received: true,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    async fetchData() {\r\n        const rawData = await fetch(this.url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-AUTH-TOKEN': '2df120a38d634333bc4c7a5c2a0c4cba',\r\n            }\r\n        })\r\n        const dataJSON = await rawData.json();\r\n        \r\n        return dataJSON;\r\n    }\r\n\r\n    render() { \r\n        var backgroungImg = [];\r\n        this.buttonID = this.props.location.data;\r\n        if (this.data == null) {\r\n            return (\r\n                <div className=\"loader\">                \r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            switch (this.buttonID) {\r\n                case 0:\r\n                        backgroungImg.push(<img className=\"BackgroundImgLaliga\"></img>);\r\n                    break;\r\n                case 1:\r\n                        backgroungImg.push(<img className=\"BackgroundImgUCL\"></img>);\r\n                    break; \r\n                case 2:\r\n                        backgroungImg.push(<img className=\"BackgroundImgBundesliga\"></img>);\r\n                    break;\r\n                case 3:\r\n                        backgroungImg.push(<img className=\"BackgroundImgEPL\"></img>);\r\n                    break;\r\n                case 4:\r\n                        backgroungImg.push(<img className=\"BackgroundImgLigue1\"></img>);\r\n                    break;\r\n                case 5:\r\n                        backgroungImg.push(<img className=\"BackgroundImgEredivise\"></img>);\r\n                    break;\r\n            }\r\n            return (\r\n                <div>\r\n                    <nav><h1>{this.name}</h1></nav>\r\n                    <div className=\"PointsTablePage\">\r\n                    <PointsTable id={this.buttonID} data={this.data} />                    \r\n                    </div>\r\n                </div>\r\n            );            \r\n        }                                             \r\n\r\n    }\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\n\r\nclass TeamDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.data = null;\r\n        this.url = \"https://api.football-data.org/v2//teams/\";\r\n        this.state = {\r\n            received: false,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const team = this.props.location.data;\r\n        this.url += team;\r\n        console.log(this.url);\r\n        this.data = await this.fetchData(this.url);\r\n        if (this.data != null) {\r\n            this.setState({\r\n                received: true,\r\n            })\r\n        }\r\n    }\r\n\r\n    async fetchData(url) {\r\n        const rawData = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'X-AUTH-TOKEN': '2df120a38d634333bc4c7a5c2a0c4cba',\r\n            }\r\n        })\r\n        const dataJSON = await rawData.json();\r\n        console.log(\"JSON: \", dataJSON);\r\n        return dataJSON;\r\n    }\r\n\r\n    render () {        \r\n        if (this.data == null) {\r\n            return (\r\n                <div className=\"loader\">                \r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            var managerCard = [], goalkeepersCard = [], defendersCard = [], midfieldersCard = [], attackersCard = []; \r\n            var manager = [], goalkeepers = [], defenders = [], midfielders = [], attackers = [];            \r\n            \r\n            console.log(this.data.squad.length);\r\n            for (let i=0; i<this.data.squad.length; i++) {\r\n                if (this.data.squad[i].role == \"PLAYER\") {\r\n                    switch(this.data.squad[i].position) {\r\n                        case \"Goalkeeper\":\r\n                            goalkeepers.push(<tr className=\"TeamDetails-tr\">{this.data.squad[i].name}</tr>);    \r\n                            break;\r\n                        case \"Defender\":\r\n                            defenders.push(<tr>{this.data.squad[i].name}</tr>);\r\n                            break;\r\n                        case \"Midfielder\":\r\n                            midfielders.push(<tr>{this.data.squad[i].name}</tr>);\r\n                            break;\r\n                        default:\r\n                            attackers.push(<tr>{this.data.squad[i].name}</tr>);\r\n                            break;\r\n                    }\r\n                } else if (this.data.squad[i].role == \"COACH\") {\r\n                    manager.push(<tr>{this.data.squad[i].name}</tr>)\r\n                }\r\n            }\r\n\r\n            managerCard.push(<table className=\"TeamDetailsCard\">\r\n                <h2>Manager</h2>\r\n                <tbody>\r\n                    {manager}\r\n                </tbody>\r\n                <div></div>\r\n            </table>)\r\n\r\n            goalkeepersCard.push(<table className=\"TeamDetailsCard\">\r\n                <h2>Goalkeepers</h2>\r\n                <tbody>\r\n                    {goalkeepers}\r\n                </tbody>\r\n            </table>)\r\n\r\n            defendersCard.push(<table className=\"TeamDetailsCard\">\r\n                <h2>Defenders</h2>\r\n                <tbody>\r\n                    {defenders}\r\n                </tbody>\r\n            </table>)\r\n\r\n            midfieldersCard.push(<table className=\"TeamDetailsCard\">\r\n                <h2>Midfielders</h2>\r\n                <tbody>\r\n                    {midfielders}\r\n                </tbody>\r\n            </table>)\r\n\r\n            attackersCard.push(<table className=\"TeamDetailsCard\">\r\n                <h2>Attackers</h2>\r\n                <tbody>\r\n                    {attackers}\r\n                </tbody>\r\n            </table>)\r\n\r\n            return (\r\n                <div>\r\n                    <nav>\r\n                        <div>\r\n                        <img className=\"TeamDetailsLogo\" src={this.data.crestUrl} alt=\"\" style={{float: \"left\"}}></img>                            \r\n                        <h1 style={{float: \"right\"}}>{this.data.name}</h1>\r\n                        </div>\r\n                    </nav>\r\n                    <div>{managerCard}</div>\r\n                    <div>{goalkeepersCard}</div>\r\n                    <div>{defendersCard}</div>\r\n                    <div>{midfieldersCard}</div>\r\n                    <div>{attackersCard}</div>\r\n                </div>                \r\n            )\r\n        }\r\n    }\r\n}\r\nexport default TeamDetails;","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport Loading from './Loading';\r\nimport TeamDetails from './TeamDetails';\r\n\r\nfunction App() {\r\n  return (\r\n    // basename={process.env.PUBLIC_URL + '/'}\r\n    <BrowserRouter> \r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/Football-Stats-App\" exact component={Home}></Route>                     \r\n          <Route path=\"/result\" exact component={Loading}></Route>\r\n          <Route path=\"/TeamDetails\" exact component={TeamDetails}></Route>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}